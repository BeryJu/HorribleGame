{
  "name": "grunt-bumpx",
  "description": "Extended bump version number",
  "version": "0.1.5",
  "homepage": "https://github.com/Ragnarokkr/grunt-bumpx",
  "author": {
    "name": "Marco Trulla",
    "email": "marco@marcotrulla.it",
    "url": "http://marcotrulla.it/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/Ragnarokkr/grunt-bumpx.git"
  },
  "bugs": {
    "url": "https://github.com/Ragnarokkr/grunt-bumpx/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/Ragnarokkr/grunt-bumpx/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.5.4",
    "grunt-contrib-clean": "~0.4.1",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.1",
    "matchdep": "~0.1.2",
    "grunt-sildoc": "~0.1.1"
  },
  "keywords": [
    "gruntplugin",
    "bump",
    "package",
    "version",
    "number"
  ],
  "dependencies": {
    "semver": "~1.1.4"
  },
  "readme": "# grunt-bumpx [![Dependency Status](https://gemnasium.com/Ragnarokkr/grunt-bumpx.png)](https://gemnasium.com/Ragnarokkr/grunt-bumpx) \n\n> Extended bump version number\n\n\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt][grunt] before, be sure to check out the [Getting Started][getting-started] guide, as it explains how to create a [Gruntfile][] as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-bumpx --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```javascript\ngrunt.loadNpmTasks('grunt-bumpx');\n```\n\n## The \"bump\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `bump` to the data object passed into `grunt.initConfig()`.\n\n```javascript\ngrunt.initConfig({\n    bump: {\n        options: {\n            // Task-specific options go here.\n        },\n        your_target: {\n            // Target-specific file lists and/or options go here.\n        }\n    }\n})\n```\n\n**bumpx** allows to bump the version number of the configuration files (package.json, manifest.json, etc.) in your project. Only JSON files are supported, and each file **must** have a `version` field compliant to [SemVer][] guidelines.\n\n### Options\n\noptions.* | Type | Default | Description\n---|:---:|:---:|---\npart|`String`|`'build'`|the part of version number to bump. Allowed values are: `major`, `minor`, `patch`, and `build` (case insensitive).\ntabSize|`Number`|`4`|number of spaces (soft tab) to be used to indent the targeted JSON file.\nhardTab|`Boolean`|`false`|whether hard tabs (`\\t`) have to be used instead of soft tabs. This option has priority over `options.tabSize`. (If both options are defined and `hardTab` is set to `true`, then hard tabs will be used.)\nonBumped|`Function`|`function( data ){}`|callback function to be invoked after each bumped version (called for each target).\n\n#### The callback function\n\nThe callback function will be invoked each time a traget file is bumped, with an object parameter containing:\n\nField | Type | Description\n---|:---:|---\ngrunt|`Object`|the [`grunt`][grunt-object] object\ntask|`Object`|the [`task`][task] object\nindex|`Number`|the index of the currently processed file inside the files array\nversion|`String`|the new version\n\n### Usage Examples\n\n#### Default Options\nRunning the task in this way, the `version` field of each source file will be automatically bumped to the next build release, using an indentation of 4 spaces.\n\n```javascript\ngrunt.initConfig({\n    bump: {\n        options: {},\n        files: [ 'package.json', 'manifest.json' ]\n    }\n})\n```\n\nIt's also possible to manually *force* the bumping of a specific part. Just define the wanted part as parameter of the task on the command line. **The command line parameter has the priority over default and custom options.**\n\n```shell\n$ grunt bump:foo:major\n```\n\nThis will run the task with `foo` as target and `major` as part to bump.\n\n```shell\n$ grunt bump::patch\n```\n\nThis will run the task for all the specified targets using `patch` as part to bump.\n\n#### Custom Options\nRunning the task in this way, the `version` field of each traget file will be bumped to the next minor release\nusing an indentation of 2 spaces, then the callback function is invoked after each file has been bumped. Inside the callback function it's possibile to see how the passed data parameter is used to retrieve useful informations to take\ndecisions on what to do. (In this example, we presume a `pkg` and `manifest` which are updated in their `version` field, according to the processed index.)\n\n```javascript\ngrunt.initConfig({\n    bump: {\n        options: {\n            part: 'minor',\n            tabSize: 2,\n            onBumped: function( data ) {\n                if ( data.index === 0 ) {\n                    grunt.config( 'pkg.version', data.version );\n                } else {\n                    grunt.config( 'manifest.version', data.version );\n                }\n            }\n        },\n        files: [ 'package.json', 'manifest.json' ]\n    }\n})\n```\n\n## Contributing\n\nAny contribution to improve the project and/or expand it is welcome.\n\nIf you're interested in contributing to this project, take care to maintain the existing coding style.\n\nThe project follows these standard, so please you do it too:\n\n* [SemVer][] for version numbers\n* [Vandamme][] for changelog formatting\n* [EditorConfig][] for cross-editor configuration\n\nTo contribute:\n\n1. Fork it\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create new Pull Request\n\nAdd unit tests for any new or changed functionality. Lint and test your code using [Grunt][grunt].\n\n## Release History\nSee the [CHANGELOG][] distributed with the project.\n\n## License\nSee the [LICENSE][] distributed with the project.\n\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: http://gruntjs.com/getting-started\n[package.json]: https://npmjs.org/doc/json.html\n[SemVer]: http://semver.org/\n[grunt-object]: http://gruntjs.com/api/grunt#grunt.initconfig\n[task]: http://gruntjs.com/inside-tasks\n[Vandamme]: https://github.com/tech-angels/vandamme\n[EditorConfig]: http://editorconfig.org/\n[CHANGELOG]: CHANGELOG.md\n[LICENSE]: LICENSE-MIT\n\n",
  "readmeFilename": "README.md",
  "_id": "grunt-bumpx@0.1.5",
  "dist": {
    "shasum": "288e543b921be83873c81c79c109b12e0ed135f9"
  },
  "_from": "grunt-bumpx@",
  "_resolved": "https://registry.npmjs.org/grunt-bumpx/-/grunt-bumpx-0.1.5.tgz"
}
